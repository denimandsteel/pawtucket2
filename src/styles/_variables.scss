
// $grey-1:hsl(0, 0%, 20%); //#333
// $grey-2:hsl(0,  0%, 35%); //#595959
// $grey-3:hsl(0,  0%, 50%); //#808080
// $grey-4:hsl(0,  0%, 65%); //#a6a6a6
// $grey-5:hsl(0,  0%, 80%); //cdcdcd

/* THEME COLORS */
$colors: (
  calcite: #FFF,
  offwhite: #f3f4f4, 
  light-grey: #D8D8D8, 
  color-dark-grey: #b1b4b6,
  mid-grey: #979797, 
  color-black: #333,
  grey-20: hsl(0, 0%, 20%),
  grey-35: hsl(0, 0%, 35%),
  grey-50: hsl(0, 0%, 50%),
  grey-65: hsl(0, 0%, 65%),
  grey-80: hsl(0, 0%, 80%)
);

@each $color, $value in $colors {
  .b-#{$color} {
    border-color: $value;
  }
	.bg-#{$color} {
		background-color: $value;
	}
	.color-#{$color} {
		color: $value;
	}
}

@function color($key) {
	@return map-get($colors, $key);
}

@function rem($vals) {
  $remvals: ();
  @for $i from 1 through length(($vals)) {
      $unit: nth($vals, $i);
      $parsedUnit: if(unitless($unit), $unit * 1px, $unit); //this is a ternary shorthand, adds 'px' to unitless val
      $remvals: append($remvals, ($parsedUnit / 16px) * 1rem, space);
  }
  @return $remvals;
}

/* LAYOUT */
$wrapper-width: 90rem; 
// $inner-wrapper-width: 45rem; 

/* BREAKPOINTS */
$tablet: 600px;
$desktop: 1100px;

@mixin mobile {
	@media screen and (max-width: $tablet - 1px) {
		@content;
	}
}

@mixin tablet {
	@media screen and (min-width: $tablet) {
		@content;
	}
}

@mixin desktop {
	@media screen and (min-width: $desktop) {
		@content;
	}
}